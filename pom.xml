<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://maven.apache.org/POM/4.0.0"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.1.2.RELEASE</version>
  </parent>

  <groupId>nl.xs4all.epotters</groupId>
  <artifactId>poc</artifactId>
  <version>0.1-SNAPSHOT</version>
  <name>POC Base</name>
  <description>Proof of Concept</description>
  <inceptionYear>2014</inceptionYear>
  <packaging>pom</packaging>


  <modules>
    <module>poc-core</module>
    <module>poc-web-api</module>

    <module>poc-web-gui-angular</module>
    <module>poc-web-gui-dojo</module>
    <module>poc-web-gui-react</module>

    <module>poc-jobs</module>

    <module>poc-tests</module>

    <!-- module>poc-sencha</module -->
    <!-- module>poc-cordova</module -->
    <!-- module>poc-evernote</module -->
    <!-- module>poc-jcr</module -->

  </modules>


  <properties>
    <!-- Text encoding -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- Java version -->
    <java.version>11</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>

    <maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
    <project.build.timestamp>${maven.build.timestamp}</project.build.timestamp>


    <spring-boot-version>2.1.2.RELEASE</spring-boot-version>
    <spring-security-oauth2>2.3.4.RELEASE</spring-security-oauth2>
    <spring-security-oauth2-autoconfigure.version>2.1.2.RELEASE</spring-security-oauth2-autoconfigure.version>


    <node.version>v8.11.3</node.version>
    <npm.version>6.1.0</npm.version>
    <frontend-maven-plugin.version>1.6</frontend-maven-plugin.version>
    <maven-war-plugin.version>3.1.0</maven-war-plugin.version>

  </properties>


  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
    </dependency>

    <!-- Security -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security.oauth</groupId>
      <artifactId>spring-security-oauth2</artifactId>
    </dependency>


    <!-- Persistence -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>

    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
    </dependency>

    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <scope>test</scope>
    </dependency>


    <!-- Boilerplate prevention -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- Testing -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.security.oauth</groupId>
        <artifactId>spring-security-oauth2</artifactId>
        <version>${spring-security-oauth2}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.security.oauth.boot</groupId>
        <artifactId>spring-security-oauth2-autoconfigure</artifactId>
        <version>${spring-security-oauth2-autoconfigure.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>

    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${maven-war-plugin.version}</version>
          <executions>
            <execution>
              <id>default-war</id>
              <phase>prepare-package</phase>
              <configuration>
                <failOnMissingWebXml>false</failOnMissingWebXml>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- Plugin to execute command "npm install" and "npm run build" inside /${angular.projectDir}} directory -->
        <plugin>
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>${frontend-maven-plugin.version}</version>
          <executions>

            <!-- It will install nodejs and npm -->
            <execution>
              <id>install-node-and-npm</id>
              <goals>
                <goal>install-node-and-npm</goal>
              </goals>
              <configuration>
                <nodeVersion>${node.version}</nodeVersion>
                <npmVersion>${npm.version}</npmVersion>
              </configuration>
            </execution>

            <!-- It will execute command "npm install" -->
            <execution>
              <id>npm-install</id>
              <goals>
                <goal>npm</goal>
              </goals>
              <configuration>
                <arguments>install</arguments>
              </configuration>
            </execution>

            <execution>
              <id>npm-build</id>
              <goals>
                <goal>npm</goal>
              </goals>
              <configuration>
                <arguments>build</arguments>
              </configuration>
            </execution>

          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <repositories>
    <repository>
      <id>repository.spring.release</id>
      <name>Spring GA Repository</name>
      <url>http://repo.spring.io/release</url>
    </repository>
    <repository>
      <id>repository.spring.milestone</id>
      <name>Spring Milestone Repository</name>
      <url>http://repo.spring.io/milestone</url>
    </repository>
    <repository>
      <snapshots/>
      <id>milestone-local</id>
      <name>libs-milestone-local</name>
      <url>https://repo.spring.io/libs-milestone-local</url>
    </repository>
    <repository>
      <snapshots/>
      <id>snapshots</id>
      <name>libs-snapshot</name>
      <url>https://repo.spring.io/libs-snapshot</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>spring-releases</id>
      <url>http://repo.spring.io/libs-release</url>
    </pluginRepository>
    <pluginRepository>
      <id>spring-milestones</id>
      <url>http://repo.spring.io/milestone</url>
    </pluginRepository>
  </pluginRepositories>

</project>