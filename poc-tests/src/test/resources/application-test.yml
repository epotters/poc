it:
  remote:
    host: "localhost"
    protocoll: "http"
    port: 8002

spring:
  profiles:
    active: integration-tests
  banner:
    location: classpath:banner-test.txt


  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-name: poc
            client-id: poc-api
            client-secret: 134931f4-6585-4eba-8fa4-564aa5ac27ca
            authorization-grant-type: authorization_code
            redirect-uri-template: '{baseUrl}/login/oauth2/code/{registrationId}'
#           redirect-uri-template: '{baseUrl}/authorize/oauth2/code/{registrationId}'
            scope:
              - openid
              - profile
              - email
        provider:
          keycloak:
            authorization-uri: http://keycloak.localhost.lab/auth/realms/epo/protocol/openid-connect/auth
            token-uri: http://keycloak.localhost.lab/auth/realms/epo/protocol/openid-connect/token
            user-info-uri: http://keycloak.localhost.lab/auth/realms/epo/protocol/openid-connect/userinfo
            jwk-set-uri: http://keycloak.localhost.lab/auth/realms/epo/protocol/openid-connect/certs
            user-name-attribute: preferred_username


# Logging
debug: true

logging:
  file: target/log/poc.log
  level:
    org.springframework.boot.autoconfigure.logging: INFO
    org.springframework.boot.core.io.support: INFO
    org.springframework.boot.test.annotation: INFO
    org.springframework.boot.web: INFO
    org.hibernate: WARN
    org.hibernateSQL: WARN



