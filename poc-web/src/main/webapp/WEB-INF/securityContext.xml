<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

  <!-- preauthentication -->
  <security:global-method-security pre-post-annotations="enabled">
  </security:global-method-security>

  <security:http auto-config="false" use-expressions="true" entry-point-ref="http403EntryPoint"
                 access-denied-page="/errors/error?httpError=403">

    <security:custom-filter position="PRE_AUTH_FILTER" ref="proxyAuthenticationHeaderFilter"/>

    <security:intercept-url pattern="/errors/error" access="permitAll"/>
    <security:intercept-url pattern="/administrator/**" access="hasRole('ROLE_ADMIN')"/>
    <security:intercept-url pattern="/welcome/**" access="permitAll"/>
    <security:intercept-url pattern="/**" access="permitAll"/>
    <security:logout logout-success-url="/welcome/visitsToday"/>

  </security:http>

  <bean id="securityExpressionHandler"
        class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler"/>

  <bean id="http403EntryPoint"
        class="org.springframework.security.web.authentication.Http403ForbiddenEntryPoint"/>

  <bean id="proxyAuthenticationHeaderFilter"
        class="org.springframework.security.web.authentication.preauth.RequestHeaderAuthenticationFilter">
    <property name="principalRequestHeader" value="PROXY_REMOTE_USER"/>
    <property name="authenticationManager" ref="authenticationManager"/>
  </bean>

  <bean id="securityService" class="poc.core.service.impl.SecurityServiceImpl"/>

  <bean id="preAuthenticatedAuthenticationProvider"
        class="org.springframework.security.web.authentication.preauth.PreAuthenticatedAuthenticationProvider">
    <property name="preAuthenticatedUserDetailsService">
      <bean class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
        <property name="userDetailsService" ref="securityService"/>
      </bean>
    </property>
  </bean>

  <security:authentication-manager alias="authenticationManager">
    <security:authentication-provider ref="preAuthenticatedAuthenticationProvider"/>
  </security:authentication-manager>
</beans>
